.MODEL SMALL
.STACK 64
.DATA
;BACKGROUND
BACKGROUNDIMAGE         DB      ?
SCREENWIDTH             EQU     320
SCREENHEIGHT            EQU     200
SCREENSIZE              EQU     32*32

;TEMPORARY X AND Y
TEMPX                   DB      ?
TEMPY                   DB      ?
BYTEAFTERLAST           DB      ?

;START
STARTROADY              EQU     (SCREENHEIGHT - ROADIMGH)  / 2

;RANDOMIZATION
LINELENGTH              EQU     50
LINEWIDTH               EQU     20
STARTX                  EQU     0
STARTY                  EQU     (SCREENHEIGHT-LINEWIDTH)/2
NUMBEROFLINES           EQU     7

;CONSTRAINTS
XNOLEFT                 EQU     70
XNORIGHT                EQU     250
YNOUP                   EQU     70
YNODOWN                 EQU     130

;DIRECTIONS
UPDIR                   DW      ?
RIGHTDIR                DW      ?
DOWNDIR                 DW      ?
LEFTDIR                 DW      ?

;ROAD IMAGES
VERROADIMGW             EQU     20
VERROADIMGH             EQU     50
VERROADIMG              DB      ?

HORROADIMGW             EQU     50
HORROADIMGH             EQU     20

HORROADIMG DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20
 DB 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20
 DB 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 31, 31, 31, 31, 31, 31, 31, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
 DB 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
.CODE




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;; MACROS ;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;MACRO TO DRAW AN IMAGE GIVEN THESE PARAMS
DRAWIMAGE MACRO IMG, WID, HEI, STARX, STARY
    LOCAL ROWS, COLS, HANDLECANTDRAW

    
    ;VIDEO MEMORY
    MOV AX, 0A000H
    MOV ES, AX

    MOV DI, STARY*SCREENWIDTH
    ADD DI, STARX
    MOV CX, HEI
    MOV SI, OFFSET IMG

    ROWS:
        PUSH CX
        PUSH DI
        MOV CX, WID
        COLS:
            MOV DL, BYTE PTR [SI]
            CMP ES:[DI], 20
            JE HANDLECANTDRAW
            MOV ES:[DI], DL
            INC SI
            INC DI
        LOOP COLS
        POP DI
        POP CX
        ADD DI, SCREENWIDTH
    LOOP ROWS
    MOV DI, STARY*SCREENWIDTH
    ADD DI, STARX + WID





    HANDLECANTDRAW:
    MOV BYTEAFTERLAST, DI
    POP BX
    POP BX
    MOV DI, STARY*SCREENWIDTH
    ADD DI, STARX
    MOV CX, HEI
    MOV SI, OFFSET IMG

    ROWS:
        PUSH CX
        PUSH DI
        MOV CX, WID
        COLS:
            MOV DL, BYTE PTR [SI]
            CMP ES:[DI], 20
            JE HANDLECANTDRAW
            MOV ES:[DI], DL
            INC SI
            INC DI
        LOOP COLS
        POP DI
        POP CX
        ADD DI, SCREENWIDTH
    LOOP ROWS

ENDM 



;MACRO TO RANDOMIZE
GetSystemTime PROC
    MOV AH, 2Ch  ; INTERRUPT to get system time
    INT 21h
    RET
GetSystemTime ENDP



;MACRO TO GET THE POSIBLE POINTS AFTER DRAWING UP
POINTSAFTERUP PROC
    MOV UPDIR, DI
    SUB UPDIR, VERROADIMGH*SCREENWIDTH + VERROADIMGW 
    MOV RIGHTDIR, DI
    SUB RIGHTDIR, HORROADIMGH*SCREENWIDTH + VERROADIMGW 
    MOV DOWNDIR, 0
    MOV LEFTDIR, DI
    SUB LEFTDIR, HORROADIMGH*SCREENWIDTH + HORROADIMGW
    RET
POINTSAFTERUP ENDP

;MACRO TO GET THE POSIBLE POINTS AFTER DRAWING RIGHT
POINTSAFTERRIGHT PROC
    MOV UPDIR, DI
    SUB UPDIR, (VERROADIMGH-HORROADIMGH)*SCREENWIDTH  ;VERROADIMGH-HORROADIMGH = 30
    MOV RIGHTDIR, DI
    MOV DOWNDIR, DI
    MOV LEFTDIR, 0
    RET
POINTSAFTERRIGHT ENDP

;MACRO TO GET THE POSIBLE POINTS AFTER DRAWING DOWN
POINTSAFTERDOWN PROC
    MOV UPDIR, 0
    MOV RIGHTDIR, DI
    SUB RIGHTDIR, VERROADIMGW
    ADD RIGHTDIR, VERROADIMGH * SCREENHEIGHT
    MOV DOWNDIR, DI
    SUB DOWNDIR, VERROADIMGW
    ADD DOWNDIR, VERROADIMGH * SCREENHEIGHT
    MOV RIGHTDIR, DI
    SUB RIGHTDIR, HORROADIMGW
    ADD RIGHTDIR, VERROADIMGH * SCREENHEIGHT
    RET
POINTSAFTERDOWN ENDP

;MACRO TO GET THE POSIBLE POINTS AFTER DRAWING LEFT
POINTSAFTERLEFT PROC
    MOV UPDIR, DI
    SUB UPDIR, HORROADIMGW + VERROADIMGW + (VERROADIMGH - HORROADIMGW) * SCREENWIDTH 
    MOV RIGHTDIR, 0
    MOV DOWNDIR, DI
    SUB UPDIR, HORROADIMGW + VERROADIMGW
    MOV LEFTDIR, DI
    SUB LEFTDIR, 2 * HORROADIMGW
    RET
POINTSAFTERLEFT ENDP








;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;; MAIN ;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MAIN PROC FAR
MOV AX, @DATA
MOV DS, AX

MOV AH,0
MOV AL,13H
INT 10H

MOV AX, 0A000H
MOV ES, AX


;;;;;;;;;; DRAWING ROAD ;;;;;;;;;;;;


;DRAWING PART OF ROAD 
DRAWIMAGE HORROADIMG , HORROADIMGW, HORROADIMGH, 0, STARTROADY
CALL POINTSAFTERRIGHT
;THIS IS TO RANDOMIZE NUMBER FROM 0 TO 3 TO SPECIFY THE DIRECTON
MOV CX, 15
RANDOMIZEPART:
    CALL GetSystemTime
    AND DL, 3
    CMP DL, 0  ;UP
    JE CHECKUP
    CMP DL, 1  ;RIGHT
    JE CHECKRIGHT
    CMP DL, 2  ;DOWN
    JE CHECKDOWN
    JMP CHECKLEFT ;left

    CHECKUP:
    CMP UPDIR, 0
    JMP RANDOMIZEPART
    CMP UPDIR, YNOUP
    JA HANDLEUP
    JMP RANDOMIZEPART

    CHECKRIGHT:
    CMP RIGHTDIR, 0
    JMP RANDOMIZEPART
    CMP RIGHTDIR, XNORIGHT
    JB HANDLERIGHT
    JMP RANDOMIZEPART 
    
    CHECKDOWN:
    CMP DOWNDIR, 0
    JMP RANDOMIZEPART
    CMP DOWNDIR, YNODOWN
    JB HANDLEDOWN
    JMP RANDOMIZEPART
    
    CHECKLEFT:
    CMP LEFTDIR, 0
    JMP RANDOMIZEPART
    CMP LEFTDIR, XNOLEFT
    JA HANDLEUP
    JMP RANDOMIZEPART



    HANDLEUP:
    MOV AX, UPDIR
    DIV SCREENWIDTH
    MOV TEMPX, AH
    MOV TEMPY, AL
    DRAWIMAGE MACRO VERROADIMG, VERROADIMGW, VERROADIMGH, TEMPX, TEMPY
    CALL POINTSAFTERUP
    JMP FINISH

    HANDLERIGHT:
    MOV AX, RIGHTDIR
    DIV SCREENWIDTH
    MOV TEMPX, AH
    MOV TEMPY, AL
    DRAWIMAGE MACRO HORROADIMG, HORROADIMGW, HORROADIMGH, TEMPX, TEMPY
    CALL POINTSAFTERRIGHT
    JMP FINISH
    
    HANDLEDOWN:
    MOV AX, DOWNDIR
    DIV SCREENWIDTH
    MOV TEMPX, AH
    MOV TEMPY, AL
    DRAWIMAGE MACRO VERROADIMG, VERROADIMGW, VERROADIMGH, TEMPX, TEMPY
    CALL POINTSAFTERDOWN
    JMP FINISH
    
    HANDLELEFT:
    MOV AX, LEFTDIR
    DIV SCREENWIDTH
    MOV TEMPX, AH
    MOV TEMPY, AL
    DRAWIMAGE MACRO HORROADIMG, HORROADIMGW, HORROADIMGH, TEMPX, TEMPY
    CALL POINTSAFTERLEFT

    FINISH:

LOOP RANDOMIZEPART






MAIN ENDP


END MAIN





; MOV DI, 0

; ;BACKGROUND WITH IMAGE
; BACKGROUND:
;     MOV CX, SCREENSIZE
;     MOV Bx, offset img
; BACKGROUNDLOOP:
;     MOV DL, BYTE PTR [Bx]
;     MOV ES:[DI], DL
;     INC DI
;     INC BX
; LOOP BACKGROUNDLOOP